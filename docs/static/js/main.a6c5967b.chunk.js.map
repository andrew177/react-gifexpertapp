{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAOaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACO,0BAAMC,SAbQ,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACtCN,EAAc,OAQV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCXlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAEXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXtB,kBAebM,GAfa,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECEX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBlC,OAhBJC,qBAAW,WAGPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAEGqB,EDvBoBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAGZ,yBAAKA,UAAU,aAGRH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACMiB,IAAKjB,EAAIC,IACLD,UEsBjBkB,EAtCM,WAAK,MAGe1C,mBAAS,CAAC,cAHzB,mBAGf2C,EAHe,KAGF5C,EAHE,KAYtB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAUA,U,MCzBtC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a6c5967b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n//setCategories se recibe de las propiedades del componente en el archivo GifExpertApp\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        //comportamiento por defecto del formulario\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n             //agregamos una nueva categoria despues de las categorias anteriores ...c, con lo que haya en nuestra caja de texto\r\n            setCategories( (c) => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n           <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n           </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=aLP0DPAZg6qTtU1eVulvomV5kYvx8sEY`\r\n   const resp = await fetch(url)\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map( img =>{\r\n       return { \r\n           id: img.id,\r\n           title: img.title,\r\n        //    url: img.url,\r\n           url: img.images?.downsized_medium.url \r\n       }\r\n   })\r\n\r\n   return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={url} alt={title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n           \r\n            <div className=\"card-grid\">\r\n\r\n               {\r\n                   images.map( img => (\r\n                      <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n\r\n                      />\r\n                   ))\r\n               }\r\n            \r\n             </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n  \r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n       \r\n                    setstate({\r\n                        data: imgs, \r\n                        loading: false\r\n                    });\r\n\r\n\r\n            })\r\n\r\n        }, [category])\r\n\r\n        return state; // \r\n    \r\n}\r\n\r\n\r\n","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories , setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n     \r\n        //mantenemos las categorÃ­as anteriores y agregamos una nueva\r\n        // setCategories(['HunterxHunter',...categories ]);\r\n        // setCategories(cats => [...cats, 'HunterxHunter'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            key ={category}\r\n                            category={category}\r\n                         \r\n                          />\r\n                     )\r\n                }\r\n\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//\n"],"sourceRoot":""}